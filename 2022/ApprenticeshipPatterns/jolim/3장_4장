# 3-4장

저는 열정이 불타는 시기와 가라앉은 시기가 번갈아서 오는데 지금은 프로그래밍에 대한 열정이 식어있는 시기입니다. 그래서 그런지 책 내용이 마음에 많이 와닿지가 않아요. 불타오를 때 다시 읽어야 기억에 많이 남을 것 같네요.

3장 - 긴 여정을 걷다

- 긴 여정
    - 다른 사람들이 좀 이상하게 볼 수도 있다.
    - 마스터가 되려면 길게 봐야한다.
    - comment 여기서는 소프트스킬을 중요하게 여기지 않는 것 같다. 소프트 스킬도 중요하겠죠?
- 예술보다 기예
    - 예술보다는 실용성을 따지시오.
    - 시간이 너무 오래 걸리는 경우 타협할 줄도 알아야한다.
    - 일정 수준 이상의 품질은 지켜야한다.
- 지속적인 동기부여
    - 프로그래밍에 대한 동기부여를 ‘긴 여정'과 맞추는 것이 중요하다.
    - 간혹가다 ‘황금 족쇄'의 함정에 빠질 수 있다.
    - 좋아하는 일을 하다가 보면 금전적 보상이 따라오게 된다.
        - comment 정말...? 그랬으면 좋겠네요.
- 열정을 키워라
    - 직장이 열정을 펼치기에 마땅한 상황이 아닐 때
    - 좋아하는 일을 해라
    - 관련 패턴: 마음 맞는 사람들/ 배운 것을 공유하라/ 고전을 공부하라/ 자신만의 지도를 그려라
    - 열정을 키우고자 한다면, 주변 환경에 대해 미리 명확하게 경계를 지어두어라
    - comment: 열정이 식게 놔두지 말라는 이야기 같습니다. 어려운 이야기네요.
- 자신만의 지도를 그려라
    - 고용주의 경력 관리 방향이 나와 맞지 않을 때
    - 자신만의 목표를 만들어라
        - 작지만 실현 가능한 단계를 정하라
    - 지도는 언제든 마음대로 다시 그릴 수 있다
    - 맞지 않는다면 다른 기회를 찾아서 떠나야 한다.
- 직위를 지표로 이용하라
    - 직위와 실제 역량 수준을 비교해서 자신의 성취를 객관화하라
    - 낯선 사람이 당신을 어떻게 바라볼지 상상하시오
- 전장에 머물러라
    - 승진을 한다면 프로그래밍과 멀어지게 되는 상황
        - 장인의 길에서 벗어나지 않으면서 다른 형태의 보상 방안을 고용주와 논의하시오
    - 중간 관리직은 장인의 길에서 벗어나는 선택이다.
    - 열정을 키우는 한 방법.
    - comment: 과연 이 상황이 닥쳤을 때 프로그래밍을 선택할 수 있을까 하는 의문이 듭니다.
- 또 다른 길
    - 삶에서 다른 경험을 해보는 것을 두려워하지는 말라.
    - 소프트웨어 장인의 과거는 어떤 미래든 더 풍요롭게 해줄 것이다.
    - comment: 또 다른 길이 이미 프로그래밍이지만 또 또 다른 길이 있을 수도 있겠네요. 교사나 강사 일을 하고싶었던 적이 있었어요.

4장 - 정확한 자기 평가

- 가장 뒤떨어진 이가 되라
    - 자기보다 뛰어난 개발자들이 있는 팀에 들어가라.
    - 다만 얼마나 많이 배웠는지 깨달을 수 있는 것은 혼자서 일할 때 뿐이다.
        - 일하면서 성찰하기 / 부숴도 괜찮은 장난감 만들기가 중요하다.
    - 누구보다 열심히 해야한다. 그렇지 않으면 쫓겨날 위험도 있다.
    - 의식적으로 개선할 방법을 찾으며 모방해나가야 한다.
    - 바닥을 쓸어라 / 구체적인 기술 패턴으로 보완하라
    - 실천 방안
        - 알고있는 모든 팀을 나열하시오
        - 기술 수준에 따라 정렬하고, 성장하길 원하는 새 멤버에게 열려있는 팀이 있는지 찾아보시오
- 멘토를 찾아라
    - 견습생 입장에서 멘토가 될 마스터를 구분하기가 어려울 수 있다.
    - 누구도 모든 것을 알지는 못한다.
    - 잠재적인 멘토에게 거절당했을 때 위험은 별 것 아니지만 받아들여졌을 때의 보상은 크다.
    - 활발한 메일링 리스트가 있는 도구/라이브러리/커뮤니티를 찾아서 교사역할을 하는 사람을 찾아보자.
    - Q: 멘토를 구체적으로 어떻게 활용해야될까요?
- 마음 맞는 사람들
    - (소프트웨어 장인정신을 장려하는 회사는 드물다.)
    - 자기가 무엇을 배우고있는지 부담없이 보여줄 수 있으며, 상대방의 지도를 따를 의무는 없다. 이것이 멘토와 다른 점.
    - 회원 자격을 얻었으면 그 대가로 줄 맞춰 행군하는 것이 옳다고 생각하는 사람들에게 맞서서 견해를 지키는 것이다.
    - comment: 42덕에 프로그래밍을 하는 사람이 주변에 많긴 한데 비슷한 프로그래밍을 하는 사람은 거의 없는 것 같습니다. 더 적극적으로  찾아야겠다는 생각이 드네요.
    - Q: 커뮤니티 활동에 참여하시고 계시나요? 어디서 찾으셨나요?
- 팔꿈치를 맞대고
    - 다른 개발자와 실제로 같이 작업할 기회를 찾아보라
    - 선배 개발자의 행동을 흡수할 수 있다.
    - 짝 프로그래밍의 적용
- 바닥을 쓸어라
    - 팀의 신입일 때, 재미없고 매력없지만 꼭 해야 하는 일에 자원하라.
    - comment: 도제식 장인 학습의 예시같네요. 바닥의 예시에는 프로그래밍에서 벗어난 일도 포함될 것 같습니다.
